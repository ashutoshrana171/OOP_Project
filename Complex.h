class Complex{private:int real_part;int imaginary_part;public://constructor for initial value assignmentComplex(int real_part=1, int imaginary_part=1){this->real_part = real_part;this->imaginary_part = imaginary_part;}//add functionComplex add(Complex obj1){Complex z;z.real_part = real_part + obj1.real_part;z.imaginary_part = imaginary_part + obj1.imaginary_part;return z;}//subtract functionComplex subtract(Complex obj1){Complex z;z.real_part = real_part - obj1.real_part;z.imaginary_part = imaginary_part - obj1.imaginary_part;return z;}//function to convert to stringstd::string toString(){std::string z;if(imaginary_part<0)z = std::to_string(real_part) + std::to_string(imaginary_part) + "*i";elsez = std::to_string(real_part)+ "+" + std::to_string(imaginary_part) + "*i";return z;}//function to set complex numbersvoid setComplexNumber(int real_part, int imaginary_part){this->real_part = real_part;this->imaginary_part = imaginary_part;}};